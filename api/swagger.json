{
  "swagger": "2.0",
  "info": {
    "title": "MCN user service API",
    "description": "user service api",
    "version": "1.0"
  },
  "produces": ["application/json"],
  "basePath": "/api",
  "paths": {
    "/users": {
      "post": {
        "x-swagger-router-controller": "users",
        "operationId": "createUser",
        "tags": ["/users"],
        "description": "creates a user in the database.",
        "parameters": [
          {
            "name": "fb_user_id",
            "in": "query",
            "description": "The FB user id derived from FB access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "fb_user_name",
            "in": "query",
            "description": "The FB user name from FB access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The FB email from FB access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "#/definitions/UserCreated"
            }
          }
        }
      },

      "get": {
        "x-swagger-router-controller": "users",
        "operationId": "getUser",
        "tags": ["/users"],
        "description": "get user data from database.",
        "parameters": [
          {
            "name": "fb_user_id",
            "in": "query",
            "description": "The FB user id derived from FB access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "#/definitions/UserCreated"
            }
          }
        }
      }

    },

    "/users/{userID}/preferences": {
      "put": {
        "x-swagger-router-controller": "users",
        "operationId": "updateUserPref",
        "tags": ["/users"],
        "description": "update user preferences",
        "parameters": [
          {
            "name": "preferences",
            "in": "body",
            "description": "user preferences",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePref"
            }
          },
          {
            "name": "userID",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          }

        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Successful request."
          }
        }
      },

      "get": {
        "x-swagger-router-controller": "users",
        "operationId": "getUserPref",
        "tags": ["/users"],
        "description": "get user preferences from database.",
        "parameters":[
          {
            "name": "userID",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "#/definitions/updatePref"
            }
          }
        }
      }
    }









  },
  "definitions": {


    "UserCreated":{
      "properties": {
        "userID":{
          "type": "string"
        }
      },
      "required" : ["userID"]

    },

    "updatePref":{
      "type" : "object",
      "required": [
        "currency",
        "operation"
      ],
      "properties":{
        "currency":{
          "type":"string"
        },
        "operation":{
          "type": "string"
        }
      }

    },

    "Error": {
      "properties": {
        "errorMessage": {
          "type": "string"
        }
      },
      "required": ["errorMessage"]
    }
  }
}